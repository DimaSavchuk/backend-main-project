{
  "openapi": "3.0.1",
  "info": {
    "version": "0.0.1",
    "title": "API Drink-Master",
    "description": "API for project App Drink-Master",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://rest-api-drink-master.onrender.com" }
  ],

  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Filters",
      "description": "Filters endpoints"
    },
    {
      "name": "Drinks",
      "description": "Drinks endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists (Email in use)",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation of login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email, password is wrong or not verify.",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "204": {
            "description": "Successful operation of logout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current User information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/update": {
      "patch": {
        "tags": ["Users"],
        "summary": "User profile update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Date for update User profile",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation of subscribe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request ( File is required for this request)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/subscribe": {
      "post": {
        "tags": ["Users"],
        "summary": "User subscription to e-mails",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "E-mail for subscription",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation of subscribe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request ( Email is required)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/filters/categories": {
      "get": {
        "tags": ["Filters"],
        "summary": "Get a list of all categories",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCategoriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/filters/ingredients": {
      "get": {
        "tags": ["Filters"],
        "summary": "Get a list of all ingredients",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllIngredientsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/filters/glasses": {
      "get": {
        "tags": ["Filters"],
        "summary": "Get a list of all glasses",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllGlassesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/drinks/mainpage": {
      "get": {
        "tags": ["Drinks"],
        "summary": "Array of objects All recipes drinks",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "number" },
            "value": "1"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "number" },
            "value": "10"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipesMainpageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/drinks/byid/:recipeId": {
      "get": {
        "tags": ["Drinks"],
        "summary": "Object of recipe drink",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "schema": { "type": "string" },
            "description": "Example value",
            "value": "639b6de9ff77d221f190c50f"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipeOwnResponse"
                }
              }
            }
          },
          "400": {
            "description": "For adult only",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/drinks/own": {
      "get": {
        "tags": ["Drinks"],
        "summary": "Array of objects only User recipes drinks",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipesMainpageResponse"
                }
              }
            }
          },
          "404": {
            "description": "User haven't recipes yet",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/drinks/own/add": {
      "post": {
        "tags": ["Drinks"],
        "summary": "Add User's recipe",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's recipe",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/recipeOwnAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation add recipe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipeOwnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Provide all fields data",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/drinks/own/remove": {
      "delete": {
        "tags": ["Drinks"],
        "summary": "Remove User's recipe",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's recipe",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recipeRemoveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/drinks/favorite": {
      "get": {
        "tags": ["Drinks"],
        "summary": "Array of objects only User's favorite drinks",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipesMainpageResponse"
                }
              }
            }
          },
          "404": {
            "description": "User haven't favorite recipes yet",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/drinks/favorite/add": {
      "post": {
        "tags": ["Drinks"],
        "summary": "Add User's favorite recipe",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's favorite recipe",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recipeFavoriteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipeFavoriteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Сocktail has already been added!",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/drinks/favorite/remove": {
      "delete": {
        "tags": ["Drinks"],
        "summary": "Remove User's favorite recipe",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's favorite recipe",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recipeRemoveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name", "birthDate"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's password",
            "example": "OurUser"
          },
          "birthDate": {
            "type": "number",
            "description": "Birth Data our users",
            "example": "1000924800"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password hash",
            "example": "qwe/A554rty1DDddgG23"
          },
          "name": {
            "type": "string",
            "description": "User's Name",
            "example": "OurUser"
          },
          "avatarURL": {
            "type": "string",
            "description": "URL from saved User's avatar",
            "example": "www.cloud.com/avatar/c73e3fb5ccb242540b08931"
          },
          "birthDate": {
            "type": "number",
            "description": "Birth Data our users",
            "example": "1000924800"
          },
          "adult": {
            "type": "boolean",
            "description": "Our User adult or not adult",
            "example": false
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's session's token",
            "example": "Ouzzfdf6545464FFFFser"
          },
          "user": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "adult": {
              "type": "boolean",
              "description": "Our User adult or not adult",
              "example": false
            },
            "id": {
              "type": "string",
              "description": "User's ID",
              "format": "650da7a33b6c4baa23abcb66"
            }
          }
        },
        "example": [
          {
            "token": "eyJhbGciOiJI1NiIsInR5cCI6IkpXVCJ9.eyJI6IjY1MTE1YmZlMDFmNDM0ZWYwZmVmNjI0NSIsImlhdCI6MTY5NTYzNjU2OSwiZXhwIjoxNjk1NzA4NTY5fQ.tDMqO0yqfbnmMWeN4D3hJ80M-qZWx6AnW7dWDew",
            "user": {
              "email": "user@example.com",
              "adult": "true",
              "id": "639b6de9ff77d221f190c50f"
            }
          }
        ]
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {}
      },
      "GetCurrentUserResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's Name",
            "example": "UserName"
          }
        }
      },
      "SubscribeRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "SubscribeResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's e-mail for which subscribed ",
            "format": "email"
          }
        }
      },
      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's Name"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's avatar file"
          }
        }
      },
      "UpdateProfileResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string" },
          "code": { "type": "number" },
          "data": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "avatarURL": { "type": "string" }
            }
          }
        }
      },

      "GetAllCategoriesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetAllIngredientsResponse": {
        "type": "array",
        "properties": {
          "_id": {
            "type": "string",
            "description": "item id",
            "example": "64aebb7f82d96cc69e0eb504"
          },
          "ingredientThumb": {
            "type": "string",
            "description": "large photo of the item",
            "example": "https://res.cloudinary.com/dec1shvoo/image/upload/v1689169606/cocktails-v1/ingredient/7-Up.png"
          },
          "thumb-medium": {
            "type": "string",
            "description": "medium photo of the item",
            "example": "https://res.cloudinary.com/dec1shvoo/image/upload/v1689169606/cocktails-v1/ingredient/7-Up-Medium.png"
          },
          "thumb-small": {
            "type": "string",
            "description": "small photo of the item",
            "example": "https://res.cloudinary.com/dec1shvoo/image/upload/v1689169606/cocktails-v1/ingredient/7-Up-Small.png"
          },
          "title": {
            "type": "string",
            "description": "item title",
            "example": "7-Up"
          },
          "description": {
            "type": "string",
            "description": "item description",
            "example": "7 Up (stylized as 7up outside of the U.S.) is a brand of lemon-lime flavoured, non-caffeinated soft drink. The rights to the brand are held by Dr Pepper Snapple Group in the United States, and PepsiCo (or its licensees) in the rest of the world. The U.S. version of the 7 Up logo includes a red cherry between the \"7\" and \"Up\"; this red cherry has been animated and used as a mascot for the brand as Cool Spot.\r\n\r\n7 Up was created by Charles Leiper Grigg, who launched his St. Louis–based company The Howdy Corporation in 1920.[1] Grigg came up with the formula for a lemon-lime soft drink in 1929. The product, originally named \"Bib-Label Lithiated Lemon-Lime Soda\", was launched two weeks before the Wall Street Crash of 1929.[2] It contained lithium citrate, a mood-stabilizing drug, until 1950.[3] It was one of a number of patent medicine products popular in the late-19th and early-20th centuries. Its name was later shortened to \"7 Up Lithiated Lemon Soda\" before being further shortened to just \"7 Up\" by 1936.\r\n\r\nWestinghouse bought 7 Up in 1969 and sold it in 1978 to Philip Morris, who then in 1986 sold it to a group led by the investment firm Hicks & Haas.[4] 7 Up merged with Dr Pepper in 1988; Cadbury Schweppes bought the combined company in 1995. The Dr Pepper Snapple Group was spun off from Cadbury Schweppes in 2008.\r\n\r\n7 Up has been reformulated several times since its launch in 1929. In 2006, the version of the product sold in the U.S. was re-formulated so that it could be marketed as being \"100 natural\". This was achieved by eliminating the chelating-agent calcium disodium EDTA, and replacing sodium citrate with potassium citrate in order to reduce the beverage's sodium content.[5] This re-formulation contains no fruit juice and, in the U.S., is sweetened with high-fructose corn syrup (HFCS). The manufacturing process used in the production of HFCS has led some public health and advocacy groups to challenge the ad campaign's \"natural\" claims.[6] In 2007, after the Center for Science in the Public Interest threatened to sue 7 Up, it was announced that 7 Up would stop being marketed as \"100 natural\". Instead, it is now promoted as having \"100 Natural flavours\". The controversy does not extend to other countries, such as the United Kingdom, where HFCS is not generally used in foods, including 7 Up. In 2011, 7 Up began test-marketing a formula, called 7 Up Retro, using sugar rather than HFCS. Container labels sport the caption, \"Made With Real Sugar\".\r\n\r\nThere exists a myth that the 7 Up name comes from the drink having a pH over 7. That would make it neutral or basic on the scale; however, this is not the case, as the 7 Up pH is close to 3.79, similar to other drinks of the type.[7] The real origin of the name is unclear,[8] though Britvic claims that the name comes from the seven main ingredients in the drink,[9] while others have claimed that the number was a coded reference to the lithium contained in the original recipe, which has an atomic mass of approximately 7."
          },
          "type": {
            "type": "string",
            "description": "item type",
            "example": "Soft Drink"
          },
          "alcohol": {
            "type": "string",
            "description": "the presence of alcohol in the item",
            "example": "No"
          },
          "abv": {
            "type": "string",
            "description": "abbreviation",
            "example": "0"
          },
          "flavour": {
            "type": "string",
            "description": "flavour of the item",
            "example": "sugar"
          },
          "country": {
            "type": "string",
            "description": "country of origin",
            "example": "United States"
          }
        }
      },
      "GetAllGlassesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },

      "recipesMainpageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "drink": {
                  "type": "string",
                  "description": "Name of drink"
                },
                "drinkAlternate": {
                  "type": "string",
                  "description": "Alternative name drink"
                }
              }
            }
          }
        },
        "example": [
          {
            "favorites": [],
            "_id": "639b6de9ff77d221f190c55b",
            "drink": "Jitterbug",
            "drinkAlternate": "Sorry, not specified",
            "tags": "Sorry, not specified",
            "video": "Sorry, not specified",
            "category": "Cocktail",
            "IBA": "Sorry, not specified",
            "alcoholic": "Alcoholic",
            "glass": "Cocktail Glass",
            "description": "Jitterbug is a lively and energetic cocktail that will put a spring in your step. This invigorating drink combines the smoothness of vodka with the rich flavors of coffee liqueur and creamy Irish cream. The result is a delightful blend of coffee and cream with a subtle kick of vodka. Sip on a Jitterbug and let its lively flavors and creamy texture awaken your senses and keep you dancing all night long.",
            "instructions": "Wet glass, dip rim in sugar. Then add Ice. Then add everything else. It's that simple!",
            "instructionsES": "Vaso húmedo, borde de inmersión en azúcar. Luego agregue hielo. Luego agrega todo lo demás. ¡Es así de simple!",
            "instructionsDE": "Feuchtes Glas, Tauchrand in Zucker. Dann fügen Sie Eis hinzu. Dann füge alles andere hinzu. So einfach ist das!",
            "instructionsFR": "Mouiller le verre, tremper le bord dans le sucre. Ajoutez ensuite de la glace. Ajoutez ensuite tout le reste. C'est si simple!",
            "instructionsIT": "Bagna il biicchiere, immergere il bordo nello zucchero.\r\nQuindi aggiungi ghiaccio.\r\nQuindi aggiungi tutto il resto.\r\nÈ così semplice!",
            "instructionsRU": "Намочите стакан, окуните край в сахар. Затем добавьте лед. Затем добавьте все остальное. Это так просто!",
            "instructionsPL": "Mokre szkło, zanurz w cukrze. Następnie dodaj lód. Następnie dodaj wszystko inne. To takie proste!",
            "instructionsUK": "Намочити скло, занурити його обідок у цукор. Потім додайте лід. Потім додайте все інше. Це так просто!",
            "drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167155/cocktails-v1/drinks/Jitterbug.jpg",
            "ingredients": [
              {
                "title": "Gin",
                "measure": "2 jiggers ",
                "ingredientId": "64aebb7f82d96cc69e0eb4a6"
              },
              {
                "title": "Vodka",
                "measure": "1 jigger ",
                "ingredientId": "64aebb7f82d96cc69e0eb4b9"
              },
              {
                "title": "Grenadine",
                "measure": "3 dashes ",
                "ingredientId": "64aebb7f82d96cc69e0eb4c7"
              },
              {
                "title": "Lime juice",
                "measure": "1 shot ",
                "ingredientId": "64aebb7f82d96cc69e0eb4c1"
              },
              {
                "title": "Sugar",
                "measure": "Around rim put 1 pinch ",
                "ingredientId": "64aebb7f82d96cc69e0eb4bc"
              },
              {
                "title": "Sugar syrup",
                "measure": "3 dashes ",
                "ingredientId": "64aebb7f82d96cc69e0eb4d4"
              },
              {
                "title": "Soda water",
                "measure": "Fill to top with ",
                "ingredientId": "64f1d5d669d8333cf130fccd"
              }
            ],
            "shortDescription": "A lively and energetic cocktail with a blend of vodka, coffee liqueur, and creamy Irish cream."
          }
        ]
      },
      "recipeOwnAddRequest": {
        "type": "object",
        "properties": {
          "drink": {
            "type": "string",
            "description": "Name of drink"
          },
          "tags": {
            "type": "string",
            "description": "Alternative name drink"
          },
          "category": {
            "type": "string",
            "description": "category coctail"
          },
          "alcoholic": {
            "type": "string",
            "description": "type coctail, alcoholic or non-alcoholic"
          },
          "glass": {
            "type": "string",
            "description": "type glass"
          },
          "description": {
            "type": "string",
            "description": "Description coctail"
          },
          "instructions": {
            "type": "string",
            "description": "Instructions for make coctail"
          },
          "instructionsUK": {
            "type": "string",
            "description": "Instructions for make coctail on Ukrainian language"
          },
          "drinkThumb": {
            "type": "string",
            "format": "binary",
            "description": "User's coctail photo file"
          },
          "ingredients": {
            "type": "string",
            "format": "JSON",
            "description": "Масив об'єктів інгрідієнтів коктелю у форматі JSON"
          },
          "shortDescription": {
            "type": "string",
            "description": "Short coctail description"
          }
        },
        "example": {
          "drink": "My drink1",
          "tags": "super drink, alcoholic",
          "category": "super drink",
          "alcoholic": "Alcoholic",
          "glass": "tank",
          "description": "seas of gorilka",
          "instructions": "seas of gorilka",
          "instructionsUK": "seas of gorilka",
          "drinkThumb": "link to pictures",
          "ingredients": [
            {
              "title": "whisky",
              "measure": "10 oz.",
              "ingredientId": "64aebb7f82d96cc69e0eb4fa"
            }
          ],
          "shortDescription": "seas of whisky"
        }
      },
      "recipeOwnResponse": {
        "type": "object",
        "properties": {
          "drink": {
            "type": "string",
            "description": "Name of drink"
          },
          "tags": {
            "type": "string",
            "description": "Alternative name drink"
          },
          "category": {
            "type": "string",
            "description": "category coctail"
          },
          "alcoholic": {
            "type": "string",
            "description": "type coctail, alcoholic or non-alcoholic"
          },
          "glass": {
            "type": "string",
            "description": "type glass"
          },
          "description": {
            "type": "string",
            "description": "Description coctail"
          },
          "instructions": {
            "type": "string",
            "description": "Instructions for make coctail"
          },
          "instructionsUK": {
            "type": "string",
            "description": "Instructions for make coctail on Ukrainian language"
          },
          "drinkThumb": {
            "type": "string",
            "format": "binary",
            "description": "User's coctail photo file"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Name of ingredient"
                },
                "measure": {
                  "type": "string",
                  "description": "Volume of ingredient"
                },
                "ingredientId": {
                  "type": "string",
                  "description": "ingredient id"
                }
              }
            }
          },
          "shortDescription": {
            "type": "string",
            "description": "Short coctail description"
          },
          "favorites": {
            "type": "array",
            "items": {
              "description": "Users id, who added this coctails to Favorite pages",
              "type": "string",
              "Example": "650c80426c3c09abd848e590"
            }
          },
          "owner": {
            "type": "string",
            "description": "User id, who is created this recipe",
            "Example": "650c80426c3c09abd848e590"
          }
        },
        "example": {
          "code": 201,
          "message": "success",
          "data": {
            "drink": "My drink1",
            "tags": "super drink, alcoholic",
            "category": "super drink",
            "alcoholic": "Alcoholic",
            "glass": "tank",
            "description": "seas of gorilka",
            "instructions": "seas of gorilka",
            "instructionsUK": "seas of gorilka",
            "drinkThumb": "link to pictures",
            "ingredients": [
              {
                "title": "whisky",
                "measure": "10 oz.",
                "ingredientId": "64aebb7f82d96cc69e0eb4fa"
              }
            ],
            "favorites": [],
            "shortDescription": "seas of whisky",
            "owner": "650c80426c3c09abd848e590",
            "_id": "650dbed4dfb6b4dd39c20bae",
            "createdAt": "2023-09-22T16:20:36.355Z",
            "updatedAt": "2023-09-22T16:20:36.355Z"
          }
        }
      },
      "recipeFavoriteRequest": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "recipeId": {
            "type": "string",
            "description": "recipeId"
          }
        },
        "example": { "recipeId": "639b6de9ff77d221f190c50f" }
      },
      "recipeFavoriteResponse": {
        "type": "object",
        "properties": {
          "drink": {
            "type": "string",
            "description": "Name of drink"
          },
          "drinkAlternate": {
            "type": "string",
            "description": "Alternative name drink"
          }
        },
        "example": {
          "code": 201,
          "message": "Success operation",
          "data": {
            "favorites": ["650c80426c3c09abd848e590"],
            "_id": "639b6de9ff77d221f190c51a",
            "drink": "ACID",
            "drinkAlternate": "Sorry, not specified",
            "tags": "Sorry, not specified",
            "video": "Sorry, not specified",
            "category": "Shot",
            "IBA": "Sorry, not specified",
            "alcoholic": "Alcoholic",
            "glass": "Shot glass",
            "description": "ACID is a bold and electrifying cocktail that will jolt your senses. This potent drink features a mix of high-proof spirits, such as rum and vodka, blended with a burst of citrus flavors. The result is a powerful and intense cocktail that packs a punch and delivers an electrifying experience. Approach ACID with caution and let its high-energy flavors ignite your palate.",
            "instructions": "Poor in the 151 first followed by the 101 served with a Coke or Dr Pepper chaser.",
            "instructionsES": "Vierta primero el Bacardi 151, seguido del Wild Turkey 101 y sirva con Coca-Cola o Dr Pepper.",
            "instructionsDE": "Gering den 151 gefolgt von der 101, die mit einer Cola oder Dr. Pepper Chaser serviert wird.",
            "instructionsFR": "Pauvre dans le 151 premier suivi du 101 servi avec un chasseur Coke ou Dr Pepper.",
            "instructionsIT": "Versa prima il Bacardi 151 seguito dal 101, servito con una Coca-Cola.",
            "instructionsRU": "Плохо в 151 первом, за которым следует 101 подается с кока-колой или Dr Pepper Chaser.",
            "instructionsPL": "Biedny w 151, a następnie w 101 podawanych z pościgiem Coli lub Dr Pepper.",
            "instructionsUK": "Поганий у 151 першому, а потім у 101, який подається з кока-колою або др. перцем.",
            "drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167144/cocktails-v1/drinks/ACID.jpg",
            "ingredients": [
              {
                "title": "151 proof rum",
                "measure": "1 oz Bacardi ",
                "ingredientId": "64f1d5c269d8333cf130fb68"
              },
              {
                "title": "Wild Turkey",
                "measure": "1 oz ",
                "ingredientId": "64f1d5de69d8333cf130fd56"
              }
            ],
            "shortDescription": "A bold and electrifying cocktail with a mix of high-proof spirits and a burst of citrus.",
            "updatedAt": "2023-09-23T09:27:02.002Z"
          }
        }
      },
      "recipeRemoveRequest": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Recipe id"
          }
        },
        "example": { "id": "639b6de9ff77d221f190c50f" }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
